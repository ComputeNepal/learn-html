"use strict";(self.webpackChunklearn_html=self.webpackChunklearn_html||[]).push([[224],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=a.createContext({}),m=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return a.createElement(s.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=m(n),u=i,h=d["".concat(s,".").concat(u)]||d[u]||c[u]||r;return n?a.createElement(h,o(o({ref:t},p),{},{components:n})):a.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var m=2;m<r;m++)o[m]=n[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},5096:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>c,frontMatter:()=>r,metadata:()=>l,toc:()=>m});var a=n(7462),i=(n(7294),n(3905));const r={sidebar_position:7,keywords:["html","formatting in html","html formatting tags","formatting tags"]},o="HTML Formatting",l={unversionedId:"HTML Basics/html-formatting",id:"HTML Basics/html-formatting",title:"HTML Formatting",description:"There are several different types of HTML formatting tags that gives certain meaning to the content in it.",source:"@site/docs/HTML Basics/html-formatting.md",sourceDirName:"HTML Basics",slug:"/HTML Basics/html-formatting",permalink:"/docs/HTML Basics/html-formatting",draft:!1,editUrl:"https://github.com/computenepal/learn-html/docs/HTML Basics/html-formatting.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,keywords:["html","formatting in html","html formatting tags","formatting tags"]},sidebar:"tutorialSidebar",previous:{title:"HTML Paragraphs",permalink:"/docs/HTML Basics/html-paragraphs"},next:{title:"HTML Quotes",permalink:"/docs/HTML Basics/html-quotes"}},s={},m=[{value:"<code>&lt;strong&gt;</code> VS <code>&lt;b&gt;</code>",id:"strong-vs-b",level:2},{value:"<code>&lt;em&gt;</code> VS <code>&lt;i&gt;</code>",id:"em-vs-i",level:2}],p={toc:m},d="wrapper";function c(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"html-formatting"},"HTML Formatting"),(0,i.kt)("p",null,"There are several different types of HTML formatting tags that gives certain meaning to the content in it."),(0,i.kt)("p",null,"Some of the examples of HTML formatting Tags are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<b>"),": Bold Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<strong>"),": Important Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<i>"),": Italic Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<em>"),": Emphasized Text"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<mark>"),": Marked Text "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<small>"),": Smaller Text "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<del>"),": Deleted Text "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<ins>"),": Inserted Text "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<sub>"),": Subscript Text "),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"<sup>"),": Superscript Text ")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="formatting.html"',title:'"formatting.html"'},"<b>This is bold text.</b>\n<br>\n<strong>This is important text.</strong>\n<br>\n<i>This is italic text.</i>\n<br>\n<em>This is Emphasized text.</em>\n<br>\n<mark>This is marked text.</mark>\n<br>\n<small>This is small text.</small>\n<br>\n<del>This is deleted text.</del>\n<br>\n<ins>This is inserted text.</ins>\n<br>\nThis is <sub>Subscript</sub>.\n<br>\nThis is <sup>Superscript</sup>.\n")),(0,i.kt)("p",null,"Copy the above example and see the corresponding output of the code. You will find some similarities between some tags, like ",(0,i.kt)("inlineCode",{parentName:"p"},"b")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"strong")," both makes the text bold, ",(0,i.kt)("inlineCode",{parentName:"p"},"i")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"em")," both makes the text italics but they are functionally different. While ",(0,i.kt)("inlineCode",{parentName:"p"},"b")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"i")," are mainly for visuals, ",(0,i.kt)("inlineCode",{parentName:"p"},"strong")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"em")," are semantically important."),(0,i.kt)("admonition",{title:"Useful",type:"tip"},(0,i.kt)("p",{parentName:"admonition"},"It is a better idea to use ",(0,i.kt)("inlineCode",{parentName:"p"},"<strong>")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"<em>")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"<b>")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"<i>")," as they have semantic meanings.")),(0,i.kt)("h2",{id:"strong-vs-b"},(0,i.kt)("inlineCode",{parentName:"h2"},"<strong>")," VS ",(0,i.kt)("inlineCode",{parentName:"h2"},"<b>")),(0,i.kt)("p",null,"While both the tags may produce same visual outputs, they are completely different. The ",(0,i.kt)("inlineCode",{parentName:"p"},"<b>")," tag only makes the text bold but don't mark it as important whereas the ",(0,i.kt)("inlineCode",{parentName:"p"},"<strong>")," tag makes the text bold as well as mark it as important. If you want to make a text bold because the text is important, then semantically use of ",(0,i.kt)("inlineCode",{parentName:"p"},"strong")," is preferred."),(0,i.kt)("h2",{id:"em-vs-i"},(0,i.kt)("inlineCode",{parentName:"h2"},"<em>")," VS ",(0,i.kt)("inlineCode",{parentName:"h2"},"<i>")),(0,i.kt)("p",null,"While both the tags produce same visual outputs, they are also completely different as ",(0,i.kt)("inlineCode",{parentName:"p"},"strong")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"b"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"<i>")," tag makes the text wrapped inside it italic but don't add a semantic meaning whereas the ",(0,i.kt)("inlineCode",{parentName:"p"},"<em>")," tag makes the text italic as well as add semantic meaning to the text. The text wrapped inside ",(0,i.kt)("inlineCode",{parentName:"p"},"em")," is emphasized. This can be more clear when the screen reader reads your text, when you use the ",(0,i.kt)("inlineCode",{parentName:"p"},"<i>")," tag the reader don't emphasize the text while it emphasize the text wrapped in ",(0,i.kt)("inlineCode",{parentName:"p"},"<em>")," tag."))}c.isMDXComponent=!0}}]);