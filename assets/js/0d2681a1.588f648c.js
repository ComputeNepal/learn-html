"use strict";(self.webpackChunklearn_html=self.webpackChunklearn_html||[]).push([[572],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>g});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},s=Object.keys(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(i=0;i<s.length;i++)n=s[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=i.createContext({}),d=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=d(e.components);return i.createElement(o.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},u=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),u=r,g=c["".concat(o,".").concat(u)]||c[u]||m[u]||s;return n?i.createElement(g,a(a({ref:t},p),{},{components:n})):i.createElement(g,a({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=n.length,a=new Array(s);a[0]=u;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:r,a[1]=l;for(var d=2;d<s;d++)a[d]=n[d];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7593:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>a,default:()=>m,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=n(7462),r=(n(7294),n(3905));const s={sidebar_position:19,keywords:["html","sample html","basic html"]},a="Responsive Design in HTML",l={unversionedId:"html-responsive-design",id:"html-responsive-design",title:"Responsive Design in HTML",description:"Responsive web design aims to create web pages that adapt to various screen sizes and devices, providing an optimal viewing experience for users across desktops, tablets, and smartphones.",source:"@site/docs/html-responsive-design.md",sourceDirName:".",slug:"/html-responsive-design",permalink:"/docs/html-responsive-design",draft:!1,editUrl:"https://github.com/computenepal/learn-html/tree/master/docs/html-responsive-design.md",tags:[],version:"current",sidebarPosition:19,frontMatter:{sidebar_position:19,keywords:["html","sample html","basic html"]},sidebar:"tutorialSidebar",previous:{title:"Accessibility in HTML",permalink:"/docs/html-accessibility"},next:{title:"HTML Semantics and SEO",permalink:"/docs/html-semantics-and-seo"}},o={},d=[{value:"Viewport Meta Tag",id:"viewport-meta-tag",level:2},{value:"Media Queries",id:"media-queries",level:2},{value:"Fluid Layouts",id:"fluid-layouts",level:2},{value:"Flexible Images",id:"flexible-images",level:2},{value:"Breakpoint Strategy",id:"breakpoint-strategy",level:2},{value:"Flexbox and Grid",id:"flexbox-and-grid",level:2},{value:"Mobile-First Approach",id:"mobile-first-approach",level:2}],p={toc:d},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"responsive-design-in-html"},"Responsive Design in HTML"),(0,r.kt)("p",null,"Responsive web design aims to create web pages that adapt to various screen sizes and devices, providing an optimal viewing experience for users across desktops, tablets, and smartphones."),(0,r.kt)("h2",{id:"viewport-meta-tag"},"Viewport Meta Tag"),(0,r.kt)("p",null,"The viewport meta tag controls the layout and scaling of a web page on different devices."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="viewport.html"',title:'"viewport.html"'},'<meta name="viewport" content="width=device-width, initial-scale=1.0">\n')),(0,r.kt)("h2",{id:"media-queries"},"Media Queries"),(0,r.kt)("p",null,"Media queries allow you to apply CSS styles based on the characteristics of the device, such as screen width, height, and orientation."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="media-queries.css"',title:'"media-queries.css"'},"/* Styles for screens larger than 768px */\n@media (min-width: 768px) {\n    /* Add your CSS rules here */\n}\n\n/* Styles for screens smaller than 768px */\n@media (max-width: 767px) {\n    /* Add your CSS rules here */\n}\n")),(0,r.kt)("h2",{id:"fluid-layouts"},"Fluid Layouts"),(0,r.kt)("p",null,"Creating fluid layouts with percentage-based widths ensures that elements resize proportionally with the viewport."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="fluid-layout.css"',title:'"fluid-layout.css"'},".container {\n    width: 90%;\n    margin: 0 auto;\n}\n\n.column {\n    width: 50%;\n    float: left;\n}\n\n@media (max-width: 767px) {\n    .column {\n        width: 100%;\n    }\n}\n")),(0,r.kt)("h2",{id:"flexible-images"},"Flexible Images"),(0,r.kt)("p",null,"Making images responsive by setting their ",(0,r.kt)("inlineCode",{parentName:"p"},"max-width")," to 100% ensures they scale down proportionally on smaller screens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="flexible-images.css"',title:'"flexible-images.css"'},"img {\n    max-width: 100%;\n    height: auto;\n}\n")),(0,r.kt)("h2",{id:"breakpoint-strategy"},"Breakpoint Strategy"),(0,r.kt)("p",null,"Define breakpoints at which your layout will change to accommodate different screen sizes."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="breakpoints.css"',title:'"breakpoints.css"'},"/* Small screens */\n@media (max-width: 576px) {\n    /* Add styles for small screens */\n}\n\n/* Medium screens */\n@media (min-width: 577px) and (max-width: 992px) {\n    /* Add styles for medium screens */\n}\n\n/* Large screens */\n@media (min-width: 993px) {\n    /* Add styles for large screens */\n}\n")),(0,r.kt)("h2",{id:"flexbox-and-grid"},"Flexbox and Grid"),(0,r.kt)("p",null,"Using CSS flexbox and grid layouts provides powerful tools for creating responsive designs with flexible and easily adaptable layouts."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="flexbox-grid.css"',title:'"flexbox-grid.css"'},".container {\n    display: flex;\n    flex-wrap: wrap;\n}\n\n.item {\n    flex: 1 1 300px;\n    margin: 10px;\n}\n\n@media (max-width: 767px) {\n    .item {\n        flex-basis: calc(50% - 20px);\n    }\n}\n")),(0,r.kt)("h2",{id:"mobile-first-approach"},"Mobile-First Approach"),(0,r.kt)("p",null,"Start designing your website for mobile devices first, then progressively enhance the layout and features for larger screens."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-css",metastring:'title="mobile-first.css"',title:'"mobile-first.css"'},"/* Styles for mobile devices */\n@media (min-width: 320px) {\n    /* Add styles for mobile devices */\n}\n\n/* Styles for tablets */\n@media (min-width: 768px) {\n    /* Add styles for tablets */\n}\n\n/* Styles for desktops */\n@media (min-width: 1200px) {\n    /* Add styles for desktops */\n}\n")))}m.isMDXComponent=!0}}]);